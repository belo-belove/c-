据说著名犹太历史学家 Josephus有过以下的故事：在罗马人占领乔塔帕特后，39个犹太人与Josephus及他的朋友躲到一个洞中，39个犹太人决定宁愿死也不要被敌人抓到，于是决定了一个自杀方式：
        41个人排成一个圆圈，由第1个人开始报数，每报数到第3人该人就必须自杀，然后再由下一个重新报数，直到所有人都自杀身亡为止。
       然而Josephus 和他的朋友并不想遵从，Josephus要他的朋友先假装遵从，他将朋友与自己安排在第16个与第31个位置，于是逃过了这场死亡游戏。
      要求用链表实现。
       提示信息："第%d人自杀\n"
#include <stdio.h>
#include <stdlib.h>

#define N 41 //总人数
#define M 3 //报数大小
#define START 0 // 开始人数所在位置

struct Linklist {	    	 		   
int data;
struct Linklist *link;
}	    	 		    LNode[N];     //array of struct

typedef struct Linklist Link;

int main(void)
{	    	 		   
    int i;
    Link *p;

    for (i = 0; i < N; i++) {	    	 		   
        LNode[i].data = i + 1;//data field initialization

        if (i < N - 1)        //joseph ring construction
            LNode[i].link = &LNode[i + 1];
        else
            LNode[i].link = LNode;
    }

    p = &LNode[START]; //working pointer p points to the head of joseph ring

    while(p -> link != p) {	    	 		   
        for (i = 1; i < M - 1; i++)
            p = p -> link;
        printf("第%d人自杀\n", p -> link -> data);
        p -> link = p -> link -> link; //报中数字的人自杀。。。。
        p = p -> link;
    }
    if(p->link == p)
        printf("第%d人自杀\n", p -> link -> data);
return 0;
}	    	 		   
